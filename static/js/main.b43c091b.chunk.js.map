{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/Person/Person.tsx","components/PeopleTable/PeopleTable.tsx","components/People/People.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","to","isActive","classNames","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Person","person","selectedPersonSlug","isMother","isFather","name","slug","sex","born","died","motherName","fatherName","href","PeopleTable","people","map","find","personSearch","People","match","useMatch","params","useState","setPeople","isPeopleLoading","setIsPeopleLoading","isError","setIsError","isNoPeople","setIsNoPeople","loadPeople","loadedPeople","length","useEffect","HomePage","PageNotFound","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b43c091b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PersonType } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<PersonType[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PersonType } from '../../types';\n\ntype Props = {\n  person: PersonType;\n  selectedPersonSlug: string;\n  isMother: PersonType | null;\n  isFather: PersonType | null;\n};\n\nexport const Person: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n  isMother,\n  isFather,\n}) => {\n  const {\n    name,\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={classNames(\n        {\n          'has-background-warning': selectedPersonSlug === slug,\n        },\n      )}\n    >\n      <td>\n        <a\n          href={`#/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </a>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {isMother\n          ? (\n            <a\n              href={`#/people/${isMother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {isMother.name}\n            </a>\n          )\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {isFather\n          ? (\n            <a\n              href={`#/people/${isFather.slug}`}\n            >\n              {isFather.name}\n            </a>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonType } from '../../types';\nimport { Person } from '../Person';\n\ntype Props = {\n  people: PersonType[];\n  selectedPersonSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPersonSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const isMother = people.find(personSearch => {\n            return personSearch.name === person.motherName;\n          }) || null;\n\n          const isFather = people.find(personSearch => {\n            return personSearch.name === person.fatherName;\n          }) || null;\n\n          return (\n            <Person\n              person={person}\n              selectedPersonSlug={selectedPersonSlug}\n              isMother={isMother}\n              isFather={isFather}\n            />\n\n          // <tr\n          //   key={slug}\n          //   data-cy=\"person\"\n          //   className={classNames(\n          //     {\n          //       'has-background-warning': selectedPersonSlug === slug,\n          //     },\n          //   )}\n          // >\n          //   <td>\n          //     <a\n          //       href={`#/people/${slug}`}\n          //       className={classNames(\n          //         { 'has-text-danger': sex === 'f' },\n          //       )}\n          //     >\n          //       {name}\n          //     </a>\n          //   </td>\n\n          //   <td>{sex}</td>\n          //   <td>{born}</td>\n          //   <td>{died}</td>\n          //   <td>\n          //     {isMother\n          //       ? (\n          //         <a\n          //           href={`#/people/${isMother.slug}`}\n          //           className=\"has-text-danger\"\n          //         >\n          //           {isMother.name}\n          //         </a>\n          //       )\n          //       : motherName || '-'}\n          //   </td>\n\n          //   <td>\n          //     {isFather\n          //       ? (\n          //         <a\n          //           href={`#/people/${isFather.slug}`}\n          //         >\n          //           {isFather.name}\n          //         </a>\n          //       )\n          //       : fatherName || '-'}\n          //   </td>\n          // </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { PersonType } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const People: React.FC = () => {\n  const match = useMatch('people/:slug');\n  const selectedPersonSlug = match?.params.slug;\n\n  const [people, setPeople] = useState<PersonType[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isNoPeople, setIsNoPeople] = useState(false);\n\n  const loadPeople = async () => {\n    setIsPeopleLoading(true);\n    try {\n      const loadedPeople = await getPeople();\n\n      if (loadedPeople.length === 0) {\n        setIsNoPeople(true);\n      } else {\n        setPeople(loadedPeople);\n      }\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsPeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isError && isPeopleLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isError && isNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && (\n            <PeopleTable\n              people={people}\n              selectedPersonSlug={selectedPersonSlug || 'no-slug'}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { People } from './components/People';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(<HomePage />)}\n          />\n\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n\n          <Route\n            path=\"/people\"\n            element={(<People />)}\n          />\n\n          <Route\n            path=\"/people/:slug\"\n            element={(<People />)}\n          />\n\n          <Route\n            path=\"*\"\n            element={(<PageNotFound />)}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}